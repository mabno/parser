Program ::= ListaSentencias
ListaSentencias ::= Sentencia ListaSentencias'
ListaSentencias' ::= ''
ListaSentencias' ::= ; Sentencia
Sentencia ::= SentenciaSi
Sentencia ::= SentenciaFun
Sentencia ::= SentenciaAsig
Sentencia ::= SentenciaLeer
Sentencia ::= SentenciaMostrar
SentenciaSi ::= SentenciaSi' ListaSentencias finsi
SentenciaSi' ::= si Expresion entonces SentenciaSi''
SentenciaSi'' ::= Sentencia SentenciaSi'''
SentenciaSi''' ::= ''
SentenciaSi''' ::= sino Sentencia
SentenciaFun ::= func Proc finfunc
SentenciaAsig ::= id equal Expresion
SentenciaLeer ::= leer id
SentenciaMostrar ::= mostrar Expresion
Proc ::= id ( ListaPar ) ListaSentencias
ListaPar ::= id ListaPar'
ListaPar' ::= ''
ListaPar' ::= ; id ListaPar'
Expresion ::= Expresion' Expresion2
Expresion' ::= ''
Expresion' ::= oprel Expresion2
Expresion2 ::= Termino Expresion2'
Expresion2' ::= ''
Expresion2' ::= opsuma Termino
Termino ::= Factor Termino'
Termino' ::= ''
Termino' ::= opmult Factor
Factor ::= ( Expresion )
Factor ::= id
Factor ::= num