Program ::= ListaSentencias
ListaSentencias ::= Sentencia ListaSentencias'
ListaSentencias' ::= ''
ListaSentencias' ::= ; Sentencia ListaSentencias'
Sentencia ::= SentenciaSi
Sentencia ::= SentenciaFun
Sentencia ::= SentenciaAsig
Sentencia ::= SentenciaLeer
Sentencia ::= SentenciaMostrar
Sentencia ::= SentenciaRepetir
SentenciaSi ::= si Expresion entonces ListaSentencias SentenciaSi'
SentenciaSi' ::= sino ListaSentencias finsi
SentenciaSi' ::= finsi
SentenciaFun ::= func Proc finfunc
SentenciaAsig ::= id equal Expresion
SentenciaLeer ::= leer id
SentenciaMostrar ::= mostrar Expresion
SentenciaRepetir ::= repetir ListaSentencia hasta Expresion
Proc ::= id ( ListaPar ) ListaSentencias
ListaPar ::= id ListaPar'
ListaPar' ::= ''
ListaPar' ::= ; id ListaPar'
Expresion ::= Expresion2 Expresion'
Expresion' ::= ''
Expresion' ::= oprel Expresion2
Expresion2 ::= Termino Expresion2'
Expresion2' ::= ''
Expresion2' ::= opsuma Termino Expresion2'
Termino ::= Factor Termino'
Termino' ::= ''
Termino' ::= opmult Factor Termino'
Factor ::= ( Expresion )
Factor ::= id
Factor ::= num